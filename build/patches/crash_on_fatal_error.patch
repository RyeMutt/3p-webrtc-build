diff --git a/rtc_base/checks.cc b/rtc_base/checks.cc
index e732a2659d..593918e02f 100644
--- a/rtc_base/checks.cc
+++ b/rtc_base/checks.cc
@@ -16,6 +16,7 @@
 #include <cstdlib>
 
 #include "absl/strings/string_view.h"
+#include "logging.h"
 
 #if defined(WEBRTC_ANDROID)
 #define RTC_LOG_TAG_ANDROID "rtc"
@@ -24,6 +25,8 @@
 
 #if defined(WEBRTC_WIN)
 #include <windows.h>
+#else
+#include <unistd.h>
 #endif
 
 #if defined(WEBRTC_WIN)
@@ -69,13 +72,28 @@ RTC_NORETURN void WriteFatalLog(absl::string_view output) {
   __android_log_print(ANDROID_LOG_ERROR, RTC_LOG_TAG_ANDROID, "%s\n",
                       output_str.c_str());
 #endif
+  // write to stdout so that it ends up in the logs.
+  fwrite(output.data(), output.size(), 1, stdout);
   fflush(stdout);
   fwrite(output.data(), output.size(), 1, stderr);
   fflush(stderr);
+  // attempt to notify the logging subsystem to broadcast to the sinks.
+  RTC_LOG(LS_ERROR) << output_str.c_str() << "\n";
 #if defined(WEBRTC_WIN)
-  DebugBreak();
+//  DebugBreak();
 #endif
-  abort();
+  // force a crash so that the crash logger can capture the exception.
+  long* null_ptr;
+  null_ptr = 0;
+  *null_ptr = 0xDEADBEEF;
+  while (true)
+  {
+#if defined(WEBRTC_WIN)
+    _sleep(1);
+#else
+    usleep(1);
+#endif
+  }
 }
 
 RTC_NORETURN void WriteFatalLog(const char* file,
